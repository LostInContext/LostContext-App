apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.lostincontext"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {

        def BOOLEAN = 'boolean'
        def LOG = 'LOG'
        def TRUE = 'true'
        def FALSE = 'false'

        debug {
            buildConfigField BOOLEAN, LOG, TRUE
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField BOOLEAN, LOG, FALSE
        }
    }

    packagingOptions {
        // sigh, need to exclude that file since jackson creates duplicates
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin std lib
    compile "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlinVersion"

    // Support Lib
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    compile "com.android.support:palette-v7:$rootProject.supportLibraryVersion"

    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    // Play Services
    compile "com.google.android.gms:play-services-base:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-awareness:$rootProject.playServicesVersion"

    // Firebase
    compile "com.google.firebase:firebase-crash:$rootProject.firebaseVersion"

    // Dagger
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    provided "org.glassfish:javax.annotation:$rootProject.javaxAnnotationsVersion"
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"

    //DataBinding
    kapt "com.android.databinding:compiler:$rootProject.dataBindingVersion"

    // glide
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // jackson
    compile "com.fasterxml.jackson.core:jackson-databind:$rootProject.jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$rootProject.jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$rootProject.jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$rootProject.jacksonVersion"

    // retrofit
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"

    // moshi
    compile "com.squareup.moshi:moshi:$rootProject.moshiVersion"

    // groupie
    compile "com.genius:groupie:$rootProject.groupieVersion"

    // testing
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$rootProject.jUnitVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

}
